global_props:
  rand_seed: 10

logging:
  # file: logs/log
  dir: logs/exp
  level: info

dump:
  user: pavel
  title: exp_4

models:
  chui_moffatt:
    rand_seed: 20
    dt: 0.001
    alpha: 1.5
    omega: 1
    eta: 4
    kappa: 4
    xi: 40 # [2;40] ?

schemes:
  hyper_param_multi_pop:
    evaluate:
      n: 55000
      split_n: 50000
      normalize: true
      model: chui_moffatt
      metric: mse
    esn:
      n_reservoir: 600
      random_state: 2
      in_activation: tanh
      out_activation: identity
    evo:
      dump_dir: dumps/exp
      rand_seed: 3
      max_gen_num: 10

      hromo_len: 6
      fitness_weights: [ -1.0 ]

      verbose: true

      populations:
        - size: 32
          hall_of_fame: 2
          mandatory_new_num: 4
          select:
            method: selTournament
            args:
              - key: tournsize
                val: 2
          mate:
            method: dynoCxGeneByLimit
            probability: 0.85
          mutate:
            method: dynoMutGeneByLimit
            probability: 0.25
          limits:
            # spectral_radius
            - type: float
              min: 1.e-4
              max: 1
              mate:
                method: cxGaussianBoundedGene
                args:
                  - key: up
                    val: 1
                  - key: low
                    val: 1.e-4
                  - key: eta
                    val: 5
              mutate:
                method: polynomialBounded
                args:
                  - key: up
                    val: 1
                  - key: low
                    val: 1.e-4
                  - key: eta
                    val: 5
            # sparsity
            - type: float
              # logspace:
              #   power: 10
              min: 1.e-4
              max: 1.e-2
              mate:
                method: cxGaussianBoundedGene
                args:
                  - key: up
                    val: 1.e-2
                  - key: low
                    val: 1.e-4
                  - key: eta
                    val: 5
              mutate:
                method: polynomialBounded
                args:
                  - key: up
                    val: 1.e-2
                  - key: low
                    val: 1.e-4
                  - key: eta
                    val: 5
            # lambda_r
            - type: float
              min: 1.e-8
              max: 1.
              mate:
                method: cxGaussianBoundedGene
                args:
                  - key: up
                    val: 1.
                  - key: low
                    val: 1.e-8
                  - key: eta
                    val: 5
              mutate:
                method: polynomialBounded
                args:
                  - key: up
                    val: 1.
                  - key: low
                    val: 1.e-8
                  - key: eta
                    val: 5
            # regulirization
            - type: choice
              choice: ['noise', 'l2', null]
              mate:
                method: cxRandChoiceGene
            # use_bias
            - type: bool
              mate:
                method: cxRandChoiceGene
            # use_additive_noise_when_forecasting
            - type: bool
              mate:
                method: cxRandChoiceGene

        - size: 32
          hall_of_fame: 2
          mandatory_new_num: 4
          select:
            method: selTournament
            args:
              - key: tournsize
                val: 2
          mate:
            method: dynoCxGeneByLimit
            probability: 0.85
          mutate:
            method: dynoMutGeneByLimit
            probability: 0.25
          limits:
            # spectral_radius
            - type: float
              min: 1.e-4
              max: 1
              mate:
                method: cxGaussianBoundedGene
                args:
                  - key: up
                    val: 1
                  - key: low
                    val: 1.e-4
                  - key: eta
                    val: 5
              mutate:
                method: polynomialBounded
                args:
                  - key: up
                    val: 1
                  - key: low
                    val: 1.e-4
                  - key: eta
                    val: 5
            # sparsity
            - type: float
              logspace:
                power: 10
              min: 1.e-2
              max: 1
              mate:
                method: cxGaussianBoundedGene
                args:
                  - key: up
                    val: 1
                  - key: low
                    val: 1.e-2
                  - key: eta
                    val: 5
              mutate:
                method: polynomialBounded
                args:
                  - key: up
                    val: 1
                  - key: low
                    val: 1.e-2
                  - key: eta
                    val: 5
            # lambda_r
            - type: float
              min: 1.e-8
              max: 1
              mate:
                method: cxGaussianBoundedGene
                args:
                  - key: up
                    val: 1
                  - key: low
                    val: 1.e-8
                  - key: eta
                    val: 5
              mutate:
                method: polynomialBounded
                args:
                  - key: up
                    val: 1
                  - key: low
                    val: 1.e-8
                  - key: eta
                    val: 5
            # regulirization
            - type: choice
              choice: ['noise', 'l2', null]
              mate:
                method: cxRandChoiceGene
            # use_bias
            - type: bool
              mate:
                method: cxRandChoiceGene
            # use_additive_noise_when_forecasting
            - type: bool
              mate:
                method: cxRandChoiceGene

        - size: 32
          hall_of_fame: 2
          mandatory_new_num: 4
          select:
            method: selTournament
            args:
              - key: tournsize
                val: 2
          mate:
            method: dynoCxGeneByLimit
            probability: 0.85
          mutate:
            method: dynoMutGeneByLimit
            probability: 0.25
          limits:
            # spectral_radius
            - type: float
              min: 1
              max: 2
              mate:
                method: cxGaussianBoundedGene
                args:
                  - key: up
                    val: 2
                  - key: low
                    val: 1
                  - key: eta
                    val: 5
              mutate:
                method: polynomialBounded
                args:
                  - key: up
                    val: 2
                  - key: low
                    val: 1
                  - key: eta
                    val: 5
            # sparsity
            - type: float
              min: 1.e-4
              max: 1.e-2
              mate:
                method: cxGaussianBoundedGene
                args:
                  - key: up
                    val: 1.e-2
                  - key: low
                    val: 1.e-4
                  - key: eta
                    val: 5
              mutate:
                method: polynomialBounded
                args:
                  - key: up
                    val: 1.e-2
                  - key: low
                    val: 1.e-4
                  - key: eta
                    val: 5
            # lambda_r
            - type: float
              min: 1.e-8
              max: 1
              mate:
                method: cxGaussianBoundedGene
                args:
                  - key: up
                    val: 1
                  - key: low
                    val: 1.e-8
                  - key: eta
                    val: 5
              mutate:
                method: polynomialBounded
                args:
                  - key: up
                    val: 1.
                  - key: low
                    val: 1.e-8
                  - key: eta
                    val: 5
            # regulirization
            - type: choice
              choice: ['noise', 'l2', null]
              mate:
                method: cxRandChoiceGene
            # use_bias
            - type: bool
              mate:
                method: cxRandChoiceGene
            # use_additive_noise_when_forecasting
            - type: bool
              mate:
                method: cxRandChoiceGene

        - size: 32
          hall_of_fame: 2
          mandatory_new_num: 4
          select:
            method: selTournament
            args:
              - key: tournsize
                val: 2
          mate:
            method: dynoCxGeneByLimit
            probability: 0.85
          mutate:
            method: dynoMutGeneByLimit
            probability: 0.25
          limits:
            # spectral_radius
            - type: float
              min: 1
              max: 2
              mate:
                method: cxGaussianBoundedGene # cxSimulatedBinaryBoundedGene
                args:
                  - key: up
                    val: 2
                  - key: low
                    val: 1
                  - key: eta
                    val: 5
              mutate:
                method: polynomialBounded
                args:
                  - key: up
                    val: 2
                  - key: low
                    val: 1
                  - key: eta
                    val: 5
            # sparsity
            - type: float
              min: 1.e-2
              max: 1
              mate:
                method: cxGaussianBoundedGene # cxSimulatedBinaryBoundedGene
                args:
                  - key: up
                    val: 1
                  - key: low
                    val: 1.e-2
                  - key: eta
                    val: 5
              mutate:
                method: polynomialBounded
                args:
                  - key: up
                    val: 1
                  - key: low
                    val: 1.e-2
                  - key: eta
                    val: 5
            # lambda_r
            - type: float
              min: 1.e-8
              max: 1
              mate:
                method: cxGaussianBoundedGene # cxSimulatedBinaryBoundedGene
                args:
                  - key: up
                    val: 1
                  - key: low
                    val: 1.e-8
                  - key: eta
                    val: 5
              mutate:
                method: polynomialBounded
                args:
                  - key: up
                    val: 1
                  - key: low
                    val: 1.e-8
                  - key: eta
                    val: 5
            # regulirization
            - type: choice
              choice: ['noise', 'l2', null]
              mate:
                method: cxRandChoiceGene
            # use_bias
            - type: bool
              mate:
                method: cxRandChoiceGene
            # use_additive_noise_when_forecasting
            - type: bool
              mate:
                method: cxRandChoiceGene

      metrics:
        - name: max
          func: max
          package: numpy
        - name: avg
          func: mean
          package: numpy
