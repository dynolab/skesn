logging:
  file: logs/log
  level: info

evaluate:
  model: lorenz
  metric: mse
  steps: 5
  opts:
    sparsity_train: 10

dumb:
  user: pavel
  title: evo_srch_lorenz

esn:
  n_inputs: 3
  random_state: 4

  n_reservoir: 600
  lambda_r: 0.001
  noise: 1.0e-08
  sparsity: 0.001
  spectral_radius: 1.1473684210526316

test:
  multi_step:
    step_n: 5
    data_n: 40000

models:
  lorenz:
    n: 22000
    ro: 28
    dt: 0.0002
    rand_seed: 4

grid:
  verbose: true
  scoring: valid_one # train, valid_one or valid_multi. Для valid_multi необходимо задать valid_multi_n > 1
  valid_multi_n: 5
  params_set:
    lorenz:
      # n_reservoir:
      #   start: 200
      #   stop: 800
      #   num: 7
      spectral_radius:
        start: 0.2
        stop: 1.2
        num: 20
      sparsity:
        start: 0.001
        stop: 0.5
        num: 20
      noise:
        start: 0.00000001
        stop: 0.001
        num: 20
      # lambda_r:
      #   start: 0.000001
      #   stop: 0.1
      #   num: 10

evo:
  scheme_1:
    m: 10
    c: 0

    evo_spec:
      rand_seed: 1
      max_gen_num: 200
      population_size: 30

      weights: [-1.0,]

      select:
        method: selTournament
        args:
        - key: tournsize
          val: 3
      mate:
        method: cxTwoPoint
        probability: 0.9
      mutate:
        method: mutPolynomialBounded
        probability: 0.1
        indpb: 0.25

  scheme_2:
    rand_seed: 2
    max_gen_num: 200
    population_size: 30

    fitness_weights: [-1.0,]

    select:
      method: selTournament
      args:
      - key: tournsize
        val: 3
    mate:
      method: cxSimulatedBinaryBounded
      probability: 0.9
      args:
      - key: eta
        val: 20.0
    mutate:
      method: mutPolynomialBounded
      probability: 0.15
      indpb: 0.25

    limits:
    - min: 0.2
      max: 1.2
    - min: 0.001
      max: 0.8
    - min: 0.00000001
      max: 0.01
